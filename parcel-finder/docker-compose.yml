version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.flood_stage=200mb
      - cluster.routing.allocation.disk.watermark.low=500mb
      - cluster.routing.allocation.disk.watermark.high=300mb
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              kafka-topics --bootstrap-server kafka:9092 --list && \
              kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic parcel-status-change --replication-factor 1 --partitions 1 && \
              echo -e 'Successfully created the following topics:' && \
              kafka-topics --bootstrap-server kafka:9092 --list'"

#  app:
#    build: .
#    restart: always
#    command: java -jar build/libs/parcel-finder-0.0.1-SNAPSHOT.jar
#    depends_on:
#      - elasticsearch
#      - kafka
#    ports:
#      - "8080:8080"
#
